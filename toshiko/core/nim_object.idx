NimObjKind	toshiko/core/nim_object.html#NimObjKind	nim_object: NimObjKind	
NimObj	toshiko/core/nim_object.html#NimObj	nim_object: NimObj	
NimRef	toshiko/core/nim_object.html#NimRef	nim_object: NimRef	
nimobj	toshiko/core/nim_object.html#nimobj_2	nim_object: nimobj(): NimRef	
nimobj	toshiko/core/nim_object.html#nimobj,bool	nim_object: nimobj(val: bool): NimRef	
nimobj	toshiko/core/nim_object.html#nimobj_3	nim_object: nimobj(val: int | float): NimRef	
nimobj	toshiko/core/nim_object.html#nimobj,string	nim_object: nimobj(val: string): NimRef	
nimobj	toshiko/core/nim_object.html#nimobj,seq[NimRef]	nim_object: nimobj(val: seq[NimRef]): NimRef	
nimobj	toshiko/core/nim_object.html#nimobj,seq[tuple[NimRef,NimRef]]	nim_object: nimobj(val: seq[tuple[key, value: NimRef]]): NimRef	
nimtype	toshiko/core/nim_object.html#nimtype,string	nim_object: nimtype(name: string = &quot;NimType&quot;): NimRef	
`$`	toshiko/core/nim_object.html#$,NimRef	nim_object: `$`(a: NimRef): string	
repr	toshiko/core/nim_object.html#repr,NimRef	nim_object: repr(a: NimRef): string	
`==`	toshiko/core/nim_object.html#==,NimRef,NimRef	nim_object: `==`(a, b: NimRef): bool	
`+`	toshiko/core/nim_object.html#+,NimRef,NimRef	nim_object: `+`(a, b: NimRef): NimRef	
`-`	toshiko/core/nim_object.html#-,NimRef,NimRef	nim_object: `-`(a, b: NimRef): NimRef	
`*`	toshiko/core/nim_object.html#*,NimRef,NimRef	nim_object: `*`(a, b: NimRef): NimRef	
`/`	toshiko/core/nim_object.html#/,NimRef,NimRef	nim_object: `/`(a, b: NimRef): NimRef	
`[]`	toshiko/core/nim_object.html#[],NimRef,int	nim_object: `[]`(a: NimRef; index: int): NimRef	
`[]`	toshiko/core/nim_object.html#[],NimRef,string	nim_object: `[]`(a: NimRef; index: string): NimRef	
`[]`	toshiko/core/nim_object.html#[],NimRef,NimRef	nim_object: `[]`(a, b: NimRef): NimRef	
`[]=`	toshiko/core/nim_object.html#[]=,NimRef,int,NimRef	nim_object: `[]=`(a: NimRef; i: int; v: NimRef)	
`[]=`	toshiko/core/nim_object.html#[]=,NimRef,NimRef,NimRef	nim_object: `[]=`(a: NimRef; i, v: NimRef)	
`[]=`	toshiko/core/nim_object.html#[]=,NimRef,string,NimRef	nim_object: `[]=`(a: NimRef; i: string; v: NimRef)	
add	toshiko/core/nim_object.html#add,NimRef,NimRef	nim_object: add(a: NimRef; b: NimRef)	
add	toshiko/core/nim_object.html#add,NimRef,	nim_object: add(self: NimRef; val: int | float | string | bool | seq[tuple[key, value: NimRef]] |\n    seq[NimRef])	
dir	toshiko/core/nim_object.html#dir,NimRef	nim_object: dir(a: NimRef): NimRef	
len	toshiko/core/nim_object.html#len,NimRef	nim_object: len(a: NimRef): int	
pop	toshiko/core/nim_object.html#pop,NimRef,int	nim_object: pop(a: NimRef; index: int = -1): NimRef	
string	toshiko/core/nim_object.html#string.c,NimRef	nim_object: string(a: NimRef): string	
toInt	toshiko/core/nim_object.html#toInt.c,NimRef	nim_object: toInt(a: NimRef): int	
toFloat	toshiko/core/nim_object.html#toFloat.c,NimRef	nim_object: toFloat(a: NimRef): float	
toBool	toshiko/core/nim_object.html#toBool.c,NimRef	nim_object: toBool(a: NimRef): bool	
toNimRef	toshiko/core/nim_object.html#toNimRef.c	nim_object: toNimRef(a: int | float | string | bool | seq[tuple[key, value: NimRef]] |\n    seq[NimRef]): NimRef	
tonimobj	toshiko/core/nim_object.html#tonimobj.m,untyped	nim_object: tonimobj(a: untyped): untyped	
Example	nim_object.html#example	  Example	
`-&gt;`	toshiko/core/nim_object.html#->.m,NimRef,untyped	nim_object: `-&gt;`(a: NimRef; attr: untyped): untyped	
Example	nim_object.html#example	  Example	
setAttr	toshiko/core/nim_object.html#setAttr.m,NimRef,untyped,untyped	nim_object: setAttr(a: NimRef; attr, value: untyped): untyped	
Example	nim_object.html#example	  Example	
class	toshiko/core/nim_object.html#class.m,untyped,untyped	nim_object: class(a, b: untyped): untyped	
